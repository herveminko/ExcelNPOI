apply plugin: 'java'
apply plugin: 'application'

//rootProject.libsDirName = 'libs\..\..\target'

////libsDirName = '../target'

////mainClassName = 'com.mettenmeier.gsrest.entrypoint.MettenmeierGeoserverApiClient'

repositories {
   mavenCentral()
   maven {
      url "http://repo.mycompany.com/maven2"
   }
}

dependencies {
   compile group: 'org.hibernate', name: 'hibernate-core', version: '3.6.7.Final'
   testCompile group: 'junit', name: 'junit', version: '4.8.1'
}

/*
println("libsDir = " + project.libsDir.toString())
println("distsDir = " + project.distsDir.toString())
*/



task hello {
     group 'vogella'
     description 'The hello task greets Gradle by saying "Hello Gradle"'

     doFirst {
        println 'Hello Gradle'
     }
     doLast {
        println 'Bye bye Gradle'
     }
}

task copyFiles(type: Copy) {
   description 'Copies the resource directory to the target directory.'
   from 'C:/Development/c-sharp/ExcelNPOI/TerritoryHelperWPFApp/bin/Debug/'
   into 'C:/Development/c-sharp/ExcelNPOI/TerritoryHelperWPFApp/bin/Release/'
   //include('**/*.txt', '**/*.xml', '**/*.properties')
   include('**/*.*')
   println("description applied")
}



task zipFiles(type: Zip) {
   from 'C:/Development/c-sharp/ExcelNPOI/TerritoryHelperWPFApp/bin/Release/'
   include '*'
   include '*/*' //to include contents of a folder present inside Reports directory
   exclude '*/bak/*'
   archiveName 'TerritoryHelperClient.zip'
   destinationDir(file('C:/Development/c-sharp/ExcelNPOI/TerritoryHelperWPFApp/bin/'))
}
